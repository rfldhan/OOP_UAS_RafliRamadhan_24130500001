# -*- coding: utf-8 -*-
"""OOP_UAS3_RafliRamadhan_24130500001

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UjaM8zzQaNnv-SIhn5buoUvHGrIcybhj
"""

# OOP_UAS3_RafliRamadhan_24130500001

from abc import ABC, abstractmethod

# === Abstract superclass ===
class Person:
    def __init__(self, name, birth_date):
        self._name = name
        self._birth_date = birth_date

    def get_name(self):
        return self._name

    def display_info(self):
        return f"Nama: {self._name}, Tanggal Lahir: {self._birth_date}"


# === Subclasses ===
class Player(Person):
    def __init__(self, name, birth_date, jersey_number, position):
        super().__init__(name, birth_date)
        self._jersey_number = jersey_number
        self._position = position

    def display_info(self):
        person_info = super().display_info()
        return f"{person_info}, No. Punggung: {self._jersey_number}, Posisi: {self._position}"


class Coach(Person):
    def __init__(self, name, birth_date, role):
        super().__init__(name, birth_date)
        self._role = role

    def display_info(self):
        person_info = super().display_info()
        return f"{person_info}, Peran: {self._role}"


# === Factory Interface ===
class PersonFactory(ABC):
    @abstractmethod
    def create_person(self, *args, **kwargs):
        pass


# === Concrete Factories ===
class PlayerFactory(PersonFactory):
    def create_person(self, name, birth_date, jersey_number, position):
        return Player(name, birth_date, jersey_number, position)


class CoachFactory(PersonFactory):
    def create_person(self, name, birth_date, role):
        return Coach(name, birth_date, role)


# === Team & Club ===
class Team:
    def __init__(self, name):
        self._name = name
        self._players = []
        self._coaches = []

    def add_player(self, player):
        if isinstance(player, Player):
            self._players.append(player)
        else:
            print("Error: Objek bukan Player.")

    def add_coach(self, coach):
        if isinstance(coach, Coach):
            self._coaches.append(coach)
        else:
            print("Error: Objek bukan Coach.")

    def display_team_details(self):
        print("-" * 30)
        print(f"Detail Tim: {self._name}")
        print("-" * 30)

        print("\n[Staf Pelatih]")
        if not self._coaches:
            print("Belum ada pelatih terdaftar.")
        else:
            for coach in self._coaches:
                print(f"- {coach.display_info()}")

        print("\n[Skuad Pemain]")
        if not self._players:
            print("Belum ada pemain terdaftar.")
        else:
            for player in self._players:
                print(f"- {player.display_info()}")
        print("-" * 30)


class Club:
    def __init__(self, name):
        self._name = name
        self._teams = []

    def add_team(self, team):
        if isinstance(team, Team):
            self._teams.append(team)
        else:
            print("Error: Objek bukan Team.")

    def display_club_structure(self):
        print("=" * 40)
        print(f"Struktur Klub: {self._name}")
        print("=" * 40)
        if not self._teams:
            print("Klub ini belum memiliki tim.")
        else:
            for team in self._teams:
                team.display_team_details()
        print("=" * 40)


# === Main Program ===
if __name__ == "__main__":
    # Buat Factory
    coach_factory = CoachFactory()
    player_factory = PlayerFactory()

    # Buat Club dan Team
    fc_cakrawala = Club("FC Cakrawala")
    cakrawala_muda = Team("FC Cakrawala Muda (U-23)")
    fc_cakrawala.add_team(cakrawala_muda)

    # Buat dan Tambahkan Coach
    head_coach = coach_factory.create_person("Budi Santoso", "15-05-1980", "Head Coach")
    assistant_coach = coach_factory.create_person("Agus Wijoyo", "20-08-1985", "Assistant Coach")
    cakrawala_muda.add_coach(head_coach)
    cakrawala_muda.add_coach(assistant_coach)

    # Data pemain
    players_data = [
        {"name": "Andi", "dob": "10-01-2002", "jersey": 1, "pos": "Goalkeeper"},
        {"name": "Bambang", "dob": "22-03-2001", "jersey": 5, "pos": "Defender"},
        {"name": "Candra", "dob": "14-07-2001", "jersey": 4, "pos": "Defender"},
        {"name": "Dedi", "dob": "05-11-2002", "jersey": 2, "pos": "Defender"},
        {"name": "Eko", "dob": "30-01-2001", "jersey": 3, "pos": "Defender"},
        {"name": "Fajar", "dob": "12-06-2002", "jersey": 6, "pos": "Midfielder"},
        {"name": "Gilang", "dob": "19-09-2001", "jersey": 8, "pos": "Midfielder"},
        {"name": "Hadi", "dob": "25-02-2002", "jersey": 10, "pos": "Midfielder"},
        {"name": "Indra", "dob": "01-05-2001", "jersey": 7, "pos": "Forward"},
        {"name": "Joko", "dob": "03-08-2002", "jersey": 11, "pos": "Forward"},
        {"name": "Kurniawan", "dob": "18-10-2001", "jersey": 9, "pos": "Forward"},
        {"name": "Lutfi", "dob": "09-04-2002", "jersey": 12, "pos": "Substitute"},
        {"name": "Maman", "dob": "21-12-2001", "jersey": 13, "pos": "Substitute"},
        {"name": "Nanang", "dob": "28-07-2002", "jersey": 14, "pos": "Substitute"},
        {"name": "Oki", "dob": "16-03-2001", "jersey": 15, "pos": "Substitute"},
    ]

    # Tambahkan pemain
    for pdata in players_data:
        player = player_factory.create_person(pdata["name"], pdata["dob"], pdata["jersey"], pdata["pos"])
        cakrawala_muda.add_player(player)

    # Tampilkan struktur klub
    fc_cakrawala.display_club_structure()